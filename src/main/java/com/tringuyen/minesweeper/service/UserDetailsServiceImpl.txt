package io.github.seddonnguyen.service;

import model.com.tringuyen.minesweeper.User;
import repository.com.tringuyen.minesweeper.UserRepository;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import java.util.logging.Logger;
import java.util.stream.Collectors;

@Service
public class UserDetailsServiceImpl implements UserDetailsService {
    private static final Logger LOGGER = Logger.getLogger(UserDetailsServiceImpl.class.getName());

    private final UserRepository userRepository;

    public UserDetailsServiceImpl(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        User user = userRepository.findByUsername(username);
        if (user == null) {
            LOGGER.severe("User not found: " + username);
            throw new UsernameNotFoundException("User not found");
        }
        return org.springframework.security.core.userdetails.User.builder()
                                                                 .username(user.getUsername())
                                                                 .password(user.getPassword())
                                                                 .authorities(user.getRoles()
                                                                                  .stream()
                                                                                  .map(role -> new SimpleGrantedAuthority(role.getName()))
                                                                                  .collect(Collectors.toList()))
                                                                 .build();
    }
}